{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet6",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable7",
						"type": "DatasetReference"
					},
					"name": "namedim"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable3",
						"type": "DatasetReference"
					},
					"name": "titledim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable8",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          tconst as string,",
				"          ordering as string,",
				"          nconst as string,",
				"          category as string,",
				"          job as string,",
				"          characters as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"source(output(",
				"          NAMEKEY as decimal(10,0),",
				"          NCONST as string,",
				"          PRIMARYNAME as string,",
				"          BIRTHYEAR as string,",
				"          DEATHYEAR as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> namedim",
				"source(output(",
				"          TITLEKEY as decimal(10,0),",
				"          TCONST as string,",
				"          TITLETYPE as string,",
				"          PRIMARYTITLE as string,",
				"          ORIGINALTITLE as string,",
				"          ISADULT as decimal(10,0),",
				"          STARTYEAR as string,",
				"          RUNTIMEMINUTES as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> titledim",
				"source1, namedim join(source1@nconst == namedim@NCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, titledim join(source1@tconst == titledim@TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"select1 keyGenerate(output({undefined} as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"join2 select(mapColumn(",
				"          tconst = source1@tconst,",
				"          ordering,",
				"          nconst = source1@nconst,",
				"          category,",
				"          job,",
				"          characters,",
				"          NAMEKEY,",
				"          NCONST = namedim@NCONST,",
				"          PRIMARYNAME,",
				"          BIRTHYEAR,",
				"          DEATHYEAR,",
				"          TITLEKEY,",
				"          TCONST = titledim@TCONST,",
				"          TITLETYPE,",
				"          PRIMARYTITLE,",
				"          ORIGINALTITLE,",
				"          ISADULT,",
				"          STARTYEAR,",
				"          RUNTIMEMINUTES",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PRINCIPALKEY as decimal(10,0),",
				"          NAMEKEY as decimal(10,0),",
				"          TITLEKEY as decimal(10,0),",
				"          ORDERING as decimal(38,0),",
				"          CATEGORY as string,",
				"          JOB as string,",
				"          CHARACTERS as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          NAMEKEY,",
				"          TITLEKEY,",
				"          CATEGORY = category,",
				"          JOB = job,",
				"          CHARACTERS = characters",
				"     )) ~> sink1"
			]
		}
	}
}