{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "namebasics",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "namebasics",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "flatten2"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          nconst as string,",
				"          primaryName as string,",
				"          birthYear as string,",
				"          deathYear as string,",
				"          primaryProfession as string,",
				"          knownForTitles as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          nconst as string,",
				"          primaryName as string,",
				"          birthYear as string,",
				"          deathYear as string,",
				"          primaryProfession as string,",
				"          knownForTitles as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1 select(mapColumn(",
				"          nconst,",
				"          primaryName,",
				"          birthYear,",
				"          deathYear",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source2 select(mapColumn(",
				"          nconst,",
				"          primaryProfession",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(primaryProfession = split(replace(replace(replace(primaryProfession, \"[\", \"\"), \"]\", \"\"), \"\\\"\", \"\"), \",\")) ~> derivedColumn3",
				"derivedColumn3 foldDown(unroll(primaryProfession),",
				"     mapColumn(",
				"          nconst,",
				"          primaryProfession",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2",
				"flatten2, select1 join(flatten2@nconst == select1@nconst,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1"
			]
		}
	}
}