{
	"name": "bridge_genre",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTabledimtitle",
						"type": "DatasetReference"
					},
					"name": "title"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTabledimgenre",
						"type": "DatasetReference"
					},
					"name": "genre"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable9",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TITLEKEY as decimal(10,0),",
				"          TCONST as string,",
				"          TITLETYPE as string,",
				"          PRIMARYTITLE as string,",
				"          ORIGINALTITLE as string,",
				"          ISADULT as decimal(10,0),",
				"          STARTYEAR as string,",
				"          RUNTIMEMINUTES as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> title",
				"source(output(",
				"          GENREKEY as decimal(10,0),",
				"          GENRENAME as string,",
				"          TCONST as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> genre",
				"title, genre join(title@TCONST == genre@TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"select1 keyGenerate(output(TitleGenreKey as long),",
				"     startAt: 100L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"join1 select(mapColumn(",
				"          TITLEKEY,",
				"          TCONST = title@TCONST,",
				"          GENREKEY,",
				"          TCONST = genre@TCONST",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          TITLEGENREKEY as decimal(10,0),",
				"          TITLEKEY as decimal(10,0),",
				"          GENREKEY as decimal(10,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          TITLEGENREKEY = TitleGenreKey,",
				"          TITLEKEY,",
				"          GENREKEY",
				"     )) ~> sink1"
			]
		}
	}
}