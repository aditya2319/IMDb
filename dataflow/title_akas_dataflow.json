{
	"name": "title_akas_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "title_akas",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable3",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "languageDIMsnowflake",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTableregion",
						"type": "DatasetReference"
					},
					"name": "source4"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable10",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          titleId as string,",
				"          ordering as string,",
				"          title as string,",
				"          region as string,",
				"          language as string,",
				"          types as string,",
				"          attributes as string,",
				"          isOriginalTitle as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          TITLEKEY as decimal(10,0),",
				"          TCONST as string,",
				"          TITLETYPE as string,",
				"          PRIMARYTITLE as string,",
				"          ORIGINALTITLE as string,",
				"          ISADULT as decimal(10,0),",
				"          STARTYEAR as string,",
				"          RUNTIMEMINUTES as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source2",
				"source(output(",
				"          LANGUAGEKEY as decimal(10,0),",
				"          LANGUAGECODE as string,",
				"          LANGUAGEDESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source3",
				"source(output(",
				"          REGIONKEY as decimal(10,0),",
				"          REGIONCODE as string,",
				"          REGIONDESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source4",
				"source1, source2 join(titleId == TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, source3 join(language == LANGUAGECODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, source4 join(region == REGIONCODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 keyGenerate(output(TitleAkasKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 select(mapColumn(",
				"          isOriginalTitle,",
				"          TITLEKEY,",
				"          LANGUAGEKEY,",
				"          REGIONKEY,",
				"          TitleAkasKey,",
				"          titleAkas = title",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          TITLEAKASKEY as decimal(10,0),",
				"          TITLEKEY as decimal(10,0),",
				"          REGIONKEY as decimal(10,0),",
				"          LANGUAGEKEY as decimal(10,0),",
				"          AKASTITLE as string,",
				"          ISORIGINALTITLE as decimal(10,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          TITLEAKASKEY = TitleAkasKey,",
				"          TITLEKEY,",
				"          REGIONKEY,",
				"          LANGUAGEKEY,",
				"          AKASTITLE = titleAkas,",
				"          ISORIGINALTITLE = isOriginalTitle",
				"     )) ~> sink1"
			]
		}
	}
}