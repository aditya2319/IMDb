{
	"name": "region_and_language_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "country_codes",
						"type": "DatasetReference"
					},
					"name": "RegionDim"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "LanguageDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTableregion",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "languageDIMsnowflake",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "surrogateKey2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CountryCode as string,",
				"          {Country Name} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RegionDim",
				"source(output(",
				"          {ISO Language Name} as string,",
				"          Codes as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LanguageDim",
				"RegionDim keyGenerate(output(RegionKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"LanguageDim keyGenerate(output(LanguageKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey2",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          REGIONKEY as decimal(10,0),",
				"          REGIONCODE as string,",
				"          REGIONDESCRIPTION as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          REGIONKEY = RegionKey,",
				"          REGIONCODE = CountryCode,",
				"          REGIONDESCRIPTION = {Country Name}",
				"     )) ~> sink1",
				"surrogateKey2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LANGUAGEKEY as decimal(10,0),",
				"          LANGUAGECODE as string,",
				"          LANGUAGEDESCRIPTION as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sink2"
			]
		}
	}
}