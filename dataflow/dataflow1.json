{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquettitleakas",
						"type": "DatasetReference"
					},
					"name": "titleakas"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable4",
						"type": "DatasetReference"
					},
					"name": "title"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable5",
						"type": "DatasetReference"
					},
					"name": "region"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable6",
						"type": "DatasetReference"
					},
					"name": "language"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "lookup1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          titleId as string,",
				"          ordering as string,",
				"          title as string,",
				"          region as string,",
				"          language as string,",
				"          types as string,",
				"          attributes as string,",
				"          isOriginalTitle as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> titleakas",
				"source(output(",
				"          TITLEKEY as decimal(10,0),",
				"          TCONST as string,",
				"          TITLETYPE as string,",
				"          PRIMARYTITLE as string,",
				"          ORIGINALTITLE as string,",
				"          ISADULT as decimal(10,0),",
				"          STARTYEAR as string,",
				"          RUNTIMEMINUTES as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> title",
				"source(output(",
				"          REGIONKEY as decimal(10,0),",
				"          REGIONCODE as string,",
				"          REGIONDESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> region",
				"source(output(",
				"          LANGUAGEKEY as decimal(10,0),",
				"          LANGUAGECODE as string,",
				"          LANGUAGEDESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> language",
				"titleakas select(mapColumn(",
				"          title,",
				"          isOriginalTitle",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 keyGenerate(output(TitleAkasKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1, title lookup(TitleAkasKey == TITLEKEY,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1"
			]
		}
	}
}